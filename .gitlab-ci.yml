stages:
  - publish-to-registry
  - deploy-production
  - deploy-staging

variables:
  VARIABLE_DATA: Gitlab-CI-YAML
  # To work with self-hosted runner
  DOCKER_HOST: tcp://docker:2375
  
publish-to-registry:
  stage: publish-to-registry
  image: docker:stable-git
  services:
    - name: docker:stable-dind
      command: [ "dockerd", "--host=unix:///var/run/docker.sock", "--host=tcp://0.0.0.0:2375", "--mtu=1450" ]
  variables:
    DOCKER_DRIVER: overlay2
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile

deploy-staging:
  image: 
    name: dtzar/helm-kubectl
    entrypoint: [""]
  stage: deploy-staging
  services:
    - docker:19.03-dind
  environment:
    name: stg
  before_script:
    - apk add moreutils

    - envsubst < "kubernetes/deployments.yaml" | sponge "kubernetes/deployments.yaml"
      
    - kubectl config use-context radarbot-team/kubernetes-agent:contabo
  script:
    - kubectl apply -f kubernetes
  only:
    - develop


deploy-production:
  image: 
    name: dtzar/helm-kubectl
    entrypoint: [""]
  stage: deploy-production
  services:
    - docker:dind
  environment:
    name: prod
  before_script:
    - apk add moreutils

    - envsubst < "kubernetes/deployments.yaml" | sponge "kubernetes/deployments.yaml"
      
    - kubectl config use-context radarbot-team/kubernetes-agent:contabo
  script:
    - kubectl apply -f kubernetes
  only:
    - master